@using Rent.Net.Entities;
@using Microsoft.AspNet.Identity;

@using (RentDbContext dbContext = new RentDbContext())
{
    string userId = this.User.Identity.GetUserId();
    ApplicationUser user = dbContext.Users.Find(userId);
    <div id="rent-payment-incoming" class="rent-payment-container">
        <span class="rent-request-header">Payments To Me:</span>
        @foreach (Payment payment in user.PaymentsTo.ToList())
        {
            <div class="rent-payment">
                From: @(payment.Payer == null ? "Failed to get the shit again" : payment.Payer.UserName)
                <br />
                Amount: @payment.Amount
                <br />
                Notes: @payment.Notes
                <br />
                @if (!payment.Approved)
                {
                    <button class="btn payment-approve" data-payment-id="@payment.PaymentId">Approve</button>
                }
            </div>
        }
    </div>
    <div id="rent-payment-outgoing" class="rent-payment-container">
        <span class="rent-payment-header">My Payments:</span>
        @foreach (Payment payment in user.PaymentsFrom.ToList())
        {
            <div class="rent-payment">
                To: @(payment.Payee == null ? "Failed to get the shit again" : payment.Payee.UserName)
                <br />
                Amount: @payment.Amount
                <br />
                Notes: @payment.Notes
                <br />
                @if (!payment.Approved)
                {
                    <button class="btn payment-cancel" data-payment-id="@payment.PaymentId">Cancel</button>
                }
            </div>
        }
    </div>
}

@section scripts{
    <script type="text/javascript">
        $(function () {
            $(".payment-approve").click(approvePayment);
            $(".payment-cancel").click(cancelPayment);
        });

        function approvePayment(e) {
            var paymentId = $(e.delegateTarget).data("paymentId");
            $.ajax({
                url: "@this.Url.HttpRouteUrl("DefaultApi", new { Controller = "Payment" })/" + paymentId,
                method: "POST",
                success: function (response) {
                    alert(response);
                }
            });
        }

        function cancelPayment(e) {
            var paymentId = $(e.delegateTarget).data("paymentId");

            $.ajax({
                url: "@this.Url.HttpRouteUrl("DefaultApi", new { Controller = "Payment" })/" + paymentId,
                method: "DELETE",
                success: function (response) {
                    alert(response);
                }
            });
        }
    </script>
}